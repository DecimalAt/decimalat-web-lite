/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SimpleValidator,
  SimpleValidatorInterface,
} from "../../../contracts/Validations/SimpleValidator";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "validationIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "DataSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "validationIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
    ],
    name: "ParamUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "initialize",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "validate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061075a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806323e7fd591461003b5780632604fdf91461006b575b600080fd5b61005560048036038101906100509190610324565b61009b565b60405161006291906103ae565b60405180910390f35b61008560048036038101906100809190610324565b6100e1565b60405161009291906103ae565b60405180910390f35b600082847f0d1e7c47e78305216e2f64e7fb0b20e84429c9e818c9b5dcb10b76a0cc242cef846040516100ce9190610448565b60405180910390a3600190509392505050565b6000806000838060200190518101906100fa91906105f1565b9150915060005b82518110156101865785877ff3266f16042309fade43e82d316307b4d6650ad3416a691db861a1b4ec2f6cec8584815181106101405761013f610669565b5b602002602001015185858151811061015b5761015a610669565b5b60200260200101516040516101719291906106ed565b60405180910390a38080600101915050610101565b506001925050509392505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6101bb816101a8565b81146101c657600080fd5b50565b6000813590506101d8816101b2565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610231826101e8565b810181811067ffffffffffffffff821117156102505761024f6101f9565b5b80604052505050565b6000610263610194565b905061026f8282610228565b919050565b600067ffffffffffffffff82111561028f5761028e6101f9565b5b610298826101e8565b9050602081019050919050565b82818337600083830152505050565b60006102c76102c284610274565b610259565b9050828152602081018484840111156102e3576102e26101e3565b5b6102ee8482856102a5565b509392505050565b600082601f83011261030b5761030a6101de565b5b813561031b8482602086016102b4565b91505092915050565b60008060006060848603121561033d5761033c61019e565b5b600061034b868287016101c9565b935050602061035c868287016101c9565b925050604084013567ffffffffffffffff81111561037d5761037c6101a3565b5b610389868287016102f6565b9150509250925092565b60008115159050919050565b6103a881610393565b82525050565b60006020820190506103c3600083018461039f565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156104035780820151818401526020810190506103e8565b60008484015250505050565b600061041a826103c9565b61042481856103d4565b93506104348185602086016103e5565b61043d816101e8565b840191505092915050565b60006020820190508181036000830152610462818461040f565b905092915050565b600067ffffffffffffffff821115610485576104846101f9565b5b602082029050602081019050919050565b600080fd5b600067ffffffffffffffff8211156104b6576104b56101f9565b5b6104bf826101e8565b9050602081019050919050565b60006104df6104da8461049b565b610259565b9050828152602081018484840111156104fb576104fa6101e3565b5b6105068482856103e5565b509392505050565b600082601f830112610523576105226101de565b5b81516105338482602086016104cc565b91505092915050565b600061054f61054a8461046a565b610259565b9050808382526020820190506020840283018581111561057257610571610496565b5b835b818110156105b957805167ffffffffffffffff811115610597576105966101de565b5b8086016105a4898261050e565b85526020850194505050602081019050610574565b5050509392505050565b600082601f8301126105d8576105d76101de565b5b81516105e884826020860161053c565b91505092915050565b600080604083850312156106085761060761019e565b5b600083015167ffffffffffffffff811115610626576106256101a3565b5b610632858286016105c3565b925050602083015167ffffffffffffffff811115610653576106526101a3565b5b61065f858286016105c3565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b60006106bf82610698565b6106c981856106a3565b93506106d98185602086016103e5565b6106e2816101e8565b840191505092915050565b6000604082019050818103600083015261070781856106b4565b9050818103602083015261071b81846106b4565b9050939250505056fea26469706673582212200e2068f72cdef0e5db13c384717fa85a6f5f104881089cf7329078f72cb0247464736f6c63430008180033";

type SimpleValidatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleValidatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleValidator__factory extends ContractFactory {
  constructor(...args: SimpleValidatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimpleValidator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleValidator__factory {
    return super.connect(runner) as SimpleValidator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleValidatorInterface {
    return new Interface(_abi) as SimpleValidatorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleValidator {
    return new Contract(address, _abi, runner) as unknown as SimpleValidator;
  }
}
